<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE  mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="FreeBoardMapper">
    <select id="selectBoardList" parameterType="hashmap" resultType="hashmap">
        SELECT id, title, writer, password,hit_cnt,`check`
        FROM Board.bbs
        order by
            CASE WHEN `check` = 'Y' THEN 0 ELSE 1 END, root desc, step asc
        limit #{startRow},#{perRow}
#         ref(그룹번호)는 내림차순으로 step(답글 순서)는 오름차순으로
    </select>

    <select id="selectBoardDetail" parameterType="hashmap" resultType="hashmap">
SELECT *
FROM Board.bbs
WHERE id =  #{id}

    </select>

    <insert id="saveBoard" >
/*saveBoard*/
#           insert 실행 전 실행 테이블에서 가장 큰 값+1을 해서 ref에 넣는 것
#           ref값을 정해주는 것
        INSERT INTO Board.bbs
            (
             depth,
             step,
             title,
            content,
             writer,
             password,
             `check`)
        VALUES
            (
             0,
             0,
             #{title},
            #{content},
            #{writer},
                #{password},
             #{check}
              )

        <selectKey keyProperty="id" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="updateRef">
UPDATE Board.bbs
SET root = #{id}
WHERE id = #{id}

    </update>

    <update id="updateBoard" parameterType="hashmap">
        UPDATE Board.bbs
        SET
            title = #{title},
            content = #{content},
            writer = #{writer}
        WHERE
            id = #{id}
    </update>

    <delete id="deleteBoard">
        DELETE FROM Board.bbs WHERE id = #{id}
    </delete>

    <!--비밀번호 가져오기-->
    <select id="getPwd" parameterType="String" resultType="String">
        SELECT password
        FROM Board.bbs
        WHERE id=#{id}
    </select>

    <!-- 조회수 카운트 증가 -->
    <update id="upHitCnt" parameterType="int">
        UPDATE Board.bbs
        SET hit_cnt = hit_cnt + 1
        WHERE id = #{id}
    </update>

    <!--전체 행 갯수 가져오기-->
    <select id="getTotalPage" resultType="int">
        SELECT COUNT(*) FROM Board.bbs
    </select>

    <!-- 게시글 답글 순서 정보 업데이트 -->
    <!-- 같은 그룹이면서 답글을 쓸때 -->
    <update id="updateStep" parameterType="String" >
        UPDATE Board.bbs
        SET step = step + 1
        WHERE ref = #{ref}
          AND step > #{step}
    </update>

    <!--게시물 답글 정보 조회-->
    <select id="getBoardReInfo" >
        SELECT id,
               ref,
               step,
               depth
        FROM Board.bbs
        WHERE id = #{id}
    </select>

    <!-- 게시글 답글 작성 -->
    <insert id="saveReBoard">

        INSERT INTO Board.bbs
        (title,
         content,
         writer,
         password,
         ref,
         step,
         depth,
         root)
        VALUES
            (#{title},
             #{content},
             #{writer},
             #{password},
             #{ref},
             #{step},
             #{depth},
             #{root}
            )
    </insert>

    <select id="refDepthCount" resultType="int">
        SELECT COUNT(*)
        FROM Board.bbs
        WHERE root = #{root}
        AND depth = #{depth}
        AND ref = #{ref}
    </select>

    <update id="updateReplyStep">
        UPDATE Board.bbs
        SET step = step +1
        WHERE step >= #{step}
    </update>
<!--댓글달기-->
<insert id="commentBoard">
    INSERT INTO Board.comment
    (board_id,
     comname,
     comcontents
     )
    VALUES(
         #{board_id},
        #{comname},
         #{comcontents})
</insert>

<!--  댓글 출력하기  -->
    <select id="selectComment" parameterType="hashmap" resultType="hashmap">
        SELECT reid, board_id,comname, comcontents
        FROM Board.comment
        WHERE board_id = #{board_id}
        order by reid
    </select>
<!-- 댓글 삭제하기 -->
    <delete id="deleteCom">
        DELETE FROM Board.comment WHERE reid = #{reid}
    </delete>


</mapper>