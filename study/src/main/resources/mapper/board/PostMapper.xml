<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE  mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hyeonsik">
	
    <!--게시글 리스트 출력 -->
	<select id="getAllPosts" resultType="java.util.HashMap"> 
	SELECT 
		id
		,title
		,content
		,writer
		,view_cnt
		,originNo
		,groupOrd
		,groupLayer
		,DATE_FORMAT(created_date, '%Y-%m-%d') AS createdDate 
	FROM posts 
	WHERE delete_ok = 0 
	ORDER BY originNo DESC, groupOrd ASC
</select>
		
    <!--id 찾기-->
	<select id="getPostById" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT * FROM posts WHERE id = #{id} 
	</select>
	

    <!--게시글 등록 -->
	<insert id="insertPost"> 
    INSERT INTO posts (title, content, writer, view_cnt, delete_ok, originNo, groupOrd, groupLayer) 
    VALUES (#{title}, #{content}, #{writer}, 0, 0, #{originNo}, 1, 0)
	</insert>

     <!--답글을 달기 위한 게시물 등록간 orginNo 번호를 id 값으로 넣는다 -->
	<update id="insert2Post" parameterType="java.util.HashMap">
    <![CDATA[
       UPDATE posts SET originNo = (SELECT LAST_INSERT_ID()) WHERE id = (SELECT LAST_INSERT_ID());
    ]]>
	</update>
	
	<!--답글: 한 글에 대한 댓글이 여러개인 경우 우선순위를 맞춰주기 위함 -->
	<update id="updatePostReq" parameterType="java.util.HashMap">
	update posts set groupOrd = groupOrd + 1 where originNo = #{originNo} and groupOrd > #{groupOrd}
	</update>
	
	<!--게시글 답글 작성 -->
	<insert id="insertPostReq"> 
    INSERT INTO posts (title, content, writer, view_cnt, delete_ok, originNo, groupOrd, groupLayer) 
    VALUES (#{title}, #{content}, #{writer}, 0, 0, #{originNo}, #{groupOrd}+1, #{groupLayer}+1)
	</insert>

    <!--게시물 수정 -->
	<update id="updatePost" parameterType="java.util.HashMap"> 
	UPDATE posts SET title = #{title}, content = #{content} WHERE id = #{id} </update>
	
	 <!--게시물 삭제 -->
	<delete id="deletePost" parameterType="java.util.HashMap">
    UPDATE posts SET delete_ok = 1 WHERE id = #{id} </delete>
    
     <!--조회수 증가-->
    <update id="viewUp" parameterType="java.lang.Long">
    UPDATE posts SET view_cnt = view_cnt + 1 where id = #{id}
     </update>
	
	<!--게시판에 따른 댓글 조회 -->
	<select id="getCommentsByPostId" parameterType="java.util.Map" resultType="java.util.HashMap">
	    SELECT
	        *
	    FROM
	        comments
	    WHERE
	        delete_ok = 0
	        AND post_id = #{postId}
	</select>
	
	 <!--댓글 등록 -->
	<insert id="insertComment">
	    INSERT INTO comments (post_id, content, writer, delete_ok) VALUES (#{postId}, #{content}, #{writer}, 0)
	</insert>
	
	<!--댓글 삭제 -->
	<delete id="deleteComment" parameterType="long">
        UPDATE comments
        SET
            delete_ok = 1
        WHERE
            id = #{id}
    </delete>
</mapper>